<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd">

<!-- 配置注解模型 -->
    <mvc:annotation-driven>
        <!-- 消息转换器,解决responseBody返回中外乱码问题 -->
        <mvc:message-converters register-defaults="true">
            <bean class="org.springframework.http.converter.StringHttpMessageConverter">
                <property name="supportedMediaTypes" value="text/plain;charset=UTF-8" />
            </bean>
        </mvc:message-converters>
    </mvc:annotation-driven>

    <!-- 配置注解扫描的根路径 -->
    <context:component-scan base-package="com.youyue"/>

    <!-- springmvc第一条: 将静态页面的处理交由web服务器自己处理, springmvc不处理 -->
    <mvc:default-servlet-handler/>

    <mvc:resources mapping="js/**" location="/resources/js/"/>
    <mvc:resources mapping="images/**" location="/resources/images/"/>
    <mvc:resources mapping="css/**" location="/resources/styles/"/>

    <!-- springmvc第二条: 配置视图解析规则 -->
    <bean id="viewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <!-- 配置视图解析的前缀 -->
        <property name="prefix" value="/WEB-INF/pages/"/>

        <!-- 配置视图解析的后缀 -->
        <property name="suffix" value=".jsp"/>
    </bean>




    <!--  引入db属性文件 -->
    <context:property-placeholder location="classpath:db.properties"/>

    <!-- 1. 配置数据源 -->
    <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
        <property name="driverClass" value="${driver}"/>
        <property name="jdbcUrl" value="${url}"/>
        <property name="user" value="${username}"/>
        <property name="password" value="${password}"/>
    </bean>

    <!-- 2. 配置 SqlSessionFactory -->
    <bean id="sessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <!-- 引入 mybatis 的配置文件 -->
        <!--<property name="configLocation" value="classpath:mybatis-config.xml"/>-->
        <property name="mapperLocations" value="classpath*:com/youyue/mapper/*.xml"/>
    </bean>

    <!-- 3. 配置事务 -->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>

    <!-- 4. 配置事务属性-->
    <tx:advice id="txAdvice" transaction-manager="transactionManager">
        <tx:attributes>
            <tx:method name="add*"/>
            <tx:method name="delete*"/>
            <tx:method name="update*"/>
            <tx:method name="find*"/>
            <tx:method name="*"/>
        </tx:attributes>
    </tx:advice>

    <!-- 5. 配置切面 -->
    <aop:config>
        <aop:pointcut id="pointcut" expression="execution(* com.youyue.mapper.*.*(..))"/>
        <aop:advisor advice-ref="txAdvice" pointcut-ref="pointcut"/>
    </aop:config>

    <!-- 6. 配置 mybatis 中的 mapper 接口自动扫描 -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <!-- mapper 接口代理对象所在的包 -->
        <property name="basePackage" value="com.youyue.mapper"/>
        <!-- 定义 sessionFactory, 引用上面配置的工厂对象 -->
        <property name="sqlSessionFactoryBeanName" value="sessionFactory"/>
    </bean>

    <!--&lt;!&ndash; 国际化资源文件 &ndash;&gt;-->
    <!--<bean id="messageSource" class="org.springframework.context.support.ReloadableResourceBundleMessageSource">-->
        <!--&lt;!&ndash; 表示多语言配置文件在根路径下，以language开头的文件&ndash;&gt;-->
        <!--<property name="basename" value="classpath:i18n"/>-->
        <!--<property name="useCodeAsDefaultMessage" value="true"/>-->
    <!--</bean>-->

    <!--<mvc:interceptors>-->
        <!--<bean id="localeChangeInterceptor" class="org.springframework.web.servlet.i18n.LocaleChangeInterceptor">-->
            <!--<property name="paramName" value="lang"/>-->
        <!--</bean>-->
    <!--</mvc:interceptors>-->

</beans>